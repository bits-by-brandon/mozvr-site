extends layout

//
  TODO:
  * Integrate locals. eg: locals.description and locals.name.
  * Use locals for home link, for all download links, etc.
  * Structure CSS
    - Per http://www.basscss.com/docs/guides/basics/
    - Remove id's?
  * Lock in responsiveness
  * Check for compatibility across browsers
  * Clean up globals
  * Finish project template
  * Create post template
  * Integrate comments
  * Integrate SEO
  * Review structure with Casey (of CSS, etc)
  * Add animations for rollovers, etc.
  * Figure out pagination (do manually for now?)


block content

  //stage for canvas
  #stage.fixed.top-0.right-0.bottom-0.left-0.z-1


  #header.py2.white.bg-darkblue2-transparent
    include header
    #enter-vr
      a(href='')

  // Intro
  .standard-padding.white.bg-darkblue2
    .grid-container
      .row
        .col-8
          h1 We are the Mozilla Research VR team. Our goal is to bring high performance virtual reality to the web. This is our lab, where we publish experiments and resources. Grab the latest build of <a href='' class='blue1'>Firefox with VR</a>, explore our <a href='' class='blue1'>projects</a>, view <a href='' class='blue1'>source</a>, and start creating virtual worlds!
          br
          br
          a(href='').button.button-green1.px3.mr2
            | Firefox with VR
          a(href='').button.button-green1.px3
            | GitHub

  include project-tile

  #projects.standard-padding.white.bg-darkblue2
    h2 Latest Projects
    #project-grid
      mixin project-tile('sechelt')
      mixin project-tile('infodive')
      mixin project-tile('polarsea')
      mixin project-tile('polarsea')
      mixin project-tile('sechelt')
      mixin project-tile('infodive')
      mixin project-tile('polarsea')
    .cf
    a(href='').button More

include post-tile

#posts.standard-padding.dark
  h2 Latest posts
    .grid-container
      .row
        .col-4
        .col-4
        .col-4


include team-member

  #team.standard-padding.light
    .grid-container
      .row
        .col-6
          h2 About Us
          | The goal of the virtual reality team at Mozilla Research is to explore and foster the virtual reality open web. We are a small core team of Mozillians working with contributors and partners from around the world.
      .row
        .col-2
          mixin team-member('joshcarpenter')
        .col-2
          mixin team-member('vladvukicevic')
        .col-2
          mixin team-member('caseyyee')
        .col-2
          mixin team-member('diegomarcos')
        .col-4


  //#articles.standard-padding

  //
    #getfirefox

        a(href='downloads.html').download <b>Get Firefox</b> with <b>VR</b>
        br
        | Latest release: 
        a(href='downloads.html') Nov 13 2014, v36.0a1

  //
    #checklist

      h2 Checklist
      table
        tr.row
          td.number 1
          td.gap
          td Use VR-enabled browser
          //
            td.state
              span.positive READY!
          td.gap
          td.comment 
            a(href='downloads.html') Firefox
            |  or 
            a(href='downloads.html') Chromium
            |  supported
        tr.row
          td.number 2
          td.gap
          td Connect Oculus Rift
          //
            td.state
              span.positive READY!
          td.gap
          td.comment TODO: 
            a(href='' target='_blank') Support for other devices.
        tr.row
          td.number 3
          td.gap
          td Win: Set display to Extended Desktop, 90Â° rotation, 60Hz refresh.
          //
            td.state
          td.gap
          td.comment TODO: 
            a(href='' target='_blank') Support for Direct-to-Rift and 75Hz refresh.
        tr.row
          td.number
          td.gap
          td Mac: Set display to Mirror, optimize for Rift, 60Hz refresh.
          //
            td.state
          td.gap
          td.comment
        tr.row
          td.number 4
          td.gap
          td Grant fullscreen permission
          //
            td.state
          td.gap
          td.comment TODO: 
            a(href='' target='_blank') Remove this step. 

  //
    #code
    .grid-container
      .row
        .col-12
          h2 Code
      .row
        .col-4

          p Here are the basic steps for creating a WebGL. We recommend using the Three.js framework, which includes a few libraries for working with VR head sets.


          ul
            li 
              em VRControls: 
              | Acquires positional information from connected VR devices and applies  the transformations to a three.js camera object.
            li
              em VREffect: 
              | Handles stereo camera setup and rendering.

          a Example
          |  | 
          a Source

          ul
            li Include:
              code &lt;script src="js/VRControls.js"&gt;&lt;/script&gt;
            li Include
              code &lt;script src="js/VREffect.js"&gt;&lt;/script&gt;
            li Apply VR headset positional data to camera.
              code var controls = new THREE.VRControls( camera );
            li Apply VR stereo rendering to renderer
              code var effect = new THREE.VREffect( renderer );
            li Update VR headset position and apply to camera
              code controls.update();
            li Render the scene through the VREffect
              code effect.render( scene, camera );
            li Listen for user event to enter full-screen VR mode
              code document.body.addEventListener( 'dblclick', function()
              code effect.setFullScreen( true );
              code });

          | More example scenes
          a https://github.com/MozVR/vr-web-examples
          | Last update: 
          a commit b2f8420952, caseyyee, nov 14

          ul
            li Three.js VR scene
            li Vanilla WebGL VR scene
            li CSS VR scene
            li First person controls

  //
    #roadmap
      .grid-container
        .row
          .col-12
            h2 Roadmap
        .row
          .col-12
            ul
              li Remove fullscreen permission prompt: 
                a bug 585858
              li Add support for emscripten: 
                a bug 585858
              li Add Cardboard support: 
                a bug 585858



  //- include author
  //- each article in articles
  //-   article.article.intro
  //-     header
  //-       h2
  //-         a(href=article.url)= article.title
  //-     section.content
  //-       if article.intro.length > 0
  //-         | !{ typogr(article.intro).typogrify() }
  //-       if article.hasMore
  //-         p.morec
  //-           a(href=article.url) More
