extends layout

block content


  //.container.bg-transparent
    .absolute.top-0.py4
      .clearfix
        .col.col-6
          h1.bold.uppercase Making Sechelt
          p Using Cinema 4D and Three.js to create a fly through of a gradient landscape.


  // Container for canvas
  .fixed.top-0.right-0.bottom-0.left-0.z-1#stage

    //"Enter VR" buttons and prompts
    .absolute.right-2.bottom-8
      include entervr
    .absolute.right-2.bottom-8
      include entervr

  // Header
  .py2.white.bg-darken4#header
    include header

  // Intro
  .py3.white.bg-blue4
    .container
      .clearfix
        .col.col-10
          h1.ultralight
            | We are the Mozilla Research VR team. Our goal is to bring high performance virtual reality to the web. This is our lab, where we publish experiments and resources. Grab the latest build of 
            a(href=locals.downloads).basiclink-blue.light Firefox with VR
            |  explore our 
            a(href=locals.projects).basiclink-blue.light projects
            |  , view 
            a(href=locals.repo).basiclink-blue.light source
            |  , and 
            a(href='').basiclink-blue.light start creating
            |  virtual worlds!
        .col.col-2
      .clearfix
        .col.col-12.mt3
          a(href=locals.downloads).mr2.px2.button.rounded1.bg-blue1.hover-lighten
            | Get Firefox with VR
          a(href=locals.repo).px2.button.rounded1.bg-blue1.hover-lighten
            | GitHub

  include project-tile

  // Projects
  .py3.white.bg-blue4
    .container
      .clearfix
        .col.col-6.m-col-3
          h3 Latest Projects
      .clearfix.mxn2.py2
        .col.col-6.m-col-3.px2
          mixin project-tile('sechelt')
        .col.col-6.m-col-3.px2
          mixin project-tile('infodive')
        .col.col-6.m-col-3.px2
          mixin project-tile('polarsea')
        .col.col-6.m-col-3.px2
          mixin project-tile('panorama-viewer')
      .clearfix
        .col.col-12
          a(href=locals.projects).px2.button.rounded1.bg-lighten3.hover-lighten.mb3 More Projects


  include post-tile-large
  include post-tile

  // Posts

  .py3.darkblue2.bg-white
    .container
      .clearfix
        .col.col-12
          h2 Latest Posts
      .clearfix
        .col.col-12
          mixin post-tile('making-sechelt')
      .clearfix
        .col.col-12
          mixin post-tile('quick-vr-prototypes')
      .clearfix
        .col.col-12
          a(href=locals.blog).px2.button.rounded1.bg-darken3.hover-lighten.mb1 More Posts
  

  include weblink-tile

  // Web links
  
  .py3.darkblue2.bg-gray1
    .container
      .clearfix
        .col.col-12
          h3 Around the Web
      .clearfix.mxn2
        .col.col-4.m-col-4.px2
          mixin weblink-tile(0)
        .col.col-4.m-col-4.px2
          mixin weblink-tile(1)
        .col.col-4.m-col-4.px2
          mixin weblink-tile(2)
      .clearfix.mxn2
        .col.col-4.m-col-4.px2
          mixin weblink-tile(3)
        .col.col-4.m-col-4.px2
          mixin weblink-tile(1)
        .col.col-4.m-col-4.px2
          mixin weblink-tile(2)




  // FAQ

  .py3.darkblue2.bg-white
    .container
      .clearfix
        .col.col-12
          h2 Frequently Asked Questions
      .clearfix.mxn3.py2
        .col.col-6.px3

          h5.py2 Why do I need an Oculus Rift? Will you add support for other headsets?
          p.gray6.bl1.b-dotted.b-gray3.pl2 Support for other headsets is coming soon. We are using the Rift as our initial test and development HMD because it the best supported and most widely-distributed headset on the market (over 200,000 DK1 and DK2 units shipped). We are deeply committed to device-agnostic Web VR, and are next working on support for Google Cardboard and other devices.

          h5.py2 The demos run slow or choppy for me. How can I improve performance?
          p.gray6.bl1.b-dotted.b-gray3.pl2 Start by follow our display setup tips. VR is very new technology, and a few settings can make the difference between a smooth or choppy experience.

          h5.py2 Why do I need Firefox Nightly? Can I use normal desktop Firefox?
          p.gray6.bl1.b-dotted.b-gray3.pl2 VR web support is very new, and we want to test it thoroughly before we ship to all Firefox users. Our intention is to ship VR support in standard desktop Firefox as soon as it's ready.

        .col.col-6.px3

          h5.py2 Can I use Chrome?
          p.gray6.bl1.b-dotted.b-gray3.pl2 
            | Yes, mozvr.com works with VR-enabled 
            a(href=locals.build_chrome target='_blank').basiclink-blue experimental builds
            |  of Chrome being created by 
            a(href='https://twitter.com/Tojiro' target='_blank').basiclink-blue Brandon Jones 
            |  of the Chrome team.

          h5.py2 Is Firefox for Android support coming?
          p.gray6.bl1.b-dotted.b-gray3.pl2 Yes, we are currently working to bring Web VR support to Firefox for Android.

          h5.py2 Can I build Web VR experiences with HTML and CSS?
          p.gray6.bl1.b-dotted.b-gray3.pl2 Current builds of Firefox with VR support WebGL VR only, but we are working on adding support for CSS VR. Placing DOM elements into VR scenes presents significant rendering and performance challenges for the browser and will take time to do right, but we believe strongly in the importance of doing so.


  include team-member

  // Team
  .py3.blue4.bg-blue0
    .container
      .clearfix
        .col.col-12
          h2 Our Team
      .clearfix.mxn2
        .col.col-8.px2
          p The goal of the virtual reality team at Mozilla Research is to explore and foster the virtual reality open web. We are a small core team of Mozillians, and we work with partners and contributors from around the world.
      .clearfix.mxn2
        .col.col-3.m-col-2.px2
          mixin team-member('joshcarpenter')
        .col.col-3.m-col-2.px2
          mixin team-member('vladvukicevic')
        .col.col-3.m-col-2.px2
          mixin team-member('caseyyee')
        .col.col-3.m-col-2.px2
          mixin team-member('diegomarcos')
        .col.col-0.m-col-4.px2



  //#articles.standard-padding

  //
    #getfirefox

        a(href='downloads.html').download <b>Get Firefox</b> with <b>VR</b>
        br
        | Latest release: 
        a(href='downloads.html') Nov 13 2014, v36.0a1

  //
    #checklist

      h2 Checklist
      table
        tr.row
          td.number 1
          td.gap
          td Use VR-enabled browser
          //
            td.state
              span.positive READY!
          td.gap
          td.comment 
            a(href='downloads.html') Firefox
            |  or 
            a(href='downloads.html') Chromium
            |  supported
        tr.row
          td.number 2
          td.gap
          td Connect Oculus Rift
          //
            td.state
              span.positive READY!
          td.gap
          td.comment TODO: 
            a(href='' target='_blank') Support for other devices.
        tr.row
          td.number 3
          td.gap
          td Win: Set display to Extended Desktop, 90Â° rotation, 60Hz refresh.
          //
            td.state
          td.gap
          td.comment TODO: 
            a(href='' target='_blank') Support for Direct-to-Rift and 75Hz refresh.
        tr.row
          td.number
          td.gap
          td Mac: Set display to Mirror, optimize for Rift, 60Hz refresh.
          //
            td.state
          td.gap
          td.comment
        tr.row
          td.number 4
          td.gap
          td Grant fullscreen permission
          //
            td.state
          td.gap
          td.comment TODO: 
            a(href='' target='_blank') Remove this step. 

  //
    #code
    .grid-container
      .row
        .col-12
          h2 Code
      .row
        .col-4

          p Here are the basic steps for creating a WebGL. We recommend using the Three.js framework, which includes a few libraries for working with VR head sets.


          ul
            li 
              em VRControls: 
              | Acquires positional information from connected VR devices and applies  the transformations to a three.js camera object.
            li
              em VREffect: 
              | Handles stereo camera setup and rendering.

          a Example
          |  | 
          a Source

          ul
            li Include:
              code &lt;script src="js/VRControls.js"&gt;&lt;/script&gt;
            li Include
              code &lt;script src="js/VREffect.js"&gt;&lt;/script&gt;
            li Apply VR headset positional data to camera.
              code var controls = new THREE.VRControls( camera );
            li Apply VR stereo rendering to renderer
              code var effect = new THREE.VREffect( renderer );
            li Update VR headset position and apply to camera
              code controls.update();
            li Render the scene through the VREffect
              code effect.render( scene, camera );
            li Listen for user event to enter full-screen VR mode
              code document.body.addEventListener( 'dblclick', function()
              code effect.setFullScreen( true );
              code });

          | More example scenes
          a https://github.com/MozVR/vr-web-examples
          | Last update: 
          a commit b2f8420952, caseyyee, nov 14

          ul
            li Three.js VR scene
            li Vanilla WebGL VR scene
            li CSS VR scene
            li First person controls

  //
    #roadmap
      .grid-container
        .row
          .col-12
            h2 Roadmap
        .row
          .col-12
            ul
              li Remove fullscreen permission prompt: 
                a bug 585858
              li Add support for emscripten: 
                a bug 585858
              li Add Cardboard support: 
                a bug 585858



  //- include author
  //- each article in articles
  //-   article.article.intro
  //-     header
  //-       h2
  //-         a(href=article.url)= article.title
  //-     section.content
  //-       if article.intro.length > 0
  //-         | !{ typogr(article.intro).typogrify() }
  //-       if article.hasMore
  //-         p.morec
  //-           a(href=article.url) More
