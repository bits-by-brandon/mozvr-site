/*========= LAYOUT =========*/

.table {
  display: table;
  width: 100%;
}

.table-cell {
  display: table-cell;
  vertical-align: middle;
}


/*--------- GRID ---------*/

/* 

Use size prefixes. sm, md, large. Each gets own breakpoint
Use sm-show and sm-hide classes to hide/show elements at various breakpoints. (probably will not use this, but is good to have)
Make all images .fit (apply max-width 100% to ensure they do not overflow their containers)
Start with container wrapper around everything.
Use clearfixes to define rows
*/

.container {
  max-width: 100%;
  margin-left: 0rem;
  margin-right: 0rem;
  padding-left: 2rem;
  padding-right: 2rem;  
}

@media (min-width: $breakpoint-sm) {
  
  html {
    font-size: 75%;
  }
}

@media (min-width: $breakpoint-m) {
  
  html {
    font-size: 90%;
  }
}

@media (min-width: $breakpoint-l) {
  
  html {
    font-size: 100%;
  }

  .container {
    max-width: 64rem;
    margin-left: auto;
    margin-right: auto;
  }
}

.col {
  float: left;
  box-sizing: border-box;
}

.col-right {
  float: right;
  box-sizing: border-box;
}

.col-1{ width: 8.33%; }
.col-2{ width: 16.66%; }
.col-3{ width: 25.00%; }
.col-4{ width: 33.32%; }
.col-5{ width: 41.65%; }
.col-6{ width: 50.00%; }
.col-7{ width: 58.31%; }
.col-8{ width: 66.64%; }
.col-9{ width: 75.00%; }
.col-10{ width: 83.3%; }
.col-11{ width: 91.66%; }
.col-12{ width: 100%; }

@media (min-width: $breakpoint-sm) { //TODO: replace width with variables

  .sm-col {
    float: left;
    box-sizing: border-box;
  }

  .sm-col-right {
    float: right;
    box-sizing: border-box;
  }

  .sm-col-1{ width: 8.33%; }
  .sm-col-2{ width: 16.66%; }
  .sm-col-3{ width: 25.00%; }
  .sm-col-4{ width: 33.32%; }
  .sm-col-5{ width: 41.65%; }
  .sm-col-6{ width: 50.00%; }
  .sm-col-7{ width: 58.31%; }
  .sm-col-8{ width: 66.64%; }
  .sm-col-9{ width: 75.00%; }
  .sm-col-10{ width: 83.3%; }
  .sm-col-11{ width: 91.66%; }
  .sm-col-12{ width: 100%; }

} 

@media (min-width: $breakpoint-m) { //TODO: replace width with variables

  .m-col {
    float: left;
    box-sizing: border-box;
  }

  .m-col-right {
    float: right;
    box-sizing: border-box;
  }

  .m-col-1{ width: 8.33%; }
  .m-col-2{ width: 16.66%; }
  .m-col-3{ width: 25.00%; }
  .m-col-4{ width: 33.32%; }
  .m-col-5{ width: 41.65%; }
  .m-col-6{ width: 50.00%; }
  .m-col-7{ width: 58.31%; }
  .m-col-8{ width: 66.64%; }
  .m-col-9{ width: 75.00%; }
  .m-col-10{ width: 83.3%; }
  .m-col-11{ width: 91.66%; }
  .m-col-12{ width: 100%; }

} 

@media (min-width: $breakpoint-l) { //TODO: replace width with variables

  .lg-col {
    float: left;
    box-sizing: border-box;
  }

  .lg-col-right {
    float: right;
    box-sizing: border-box;
  }

  .lg-col-1{ width: 8.33%; }
  .lg-col-2{ width: 16.66%; }
  .lg-col-3{ width: 25.00%; }
  .lg-col-4{ width: 33.32%; }
  .lg-col-5{ width: 41.65%; }
  .lg-col-6{ width: 50.00%; }
  .lg-col-7{ width: 58.31%; }
  .lg-col-8{ width: 66.64%; }
  .lg-col-9{ width: 75.00%; }
  .lg-col-10{ width: 83.3%; }
  .lg-col-11{ width: 91.66%; }
  .lg-col-12{ width: 100%; }

} 

/*-- Show/Hide classes for responsively showing/hiding elements --*/

.display-none {
  display: none !important;
}

.hide {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

.sm-show,
.md-show,
.lg-show {
  display: none !important;
}

@media (min-width: $breakpoint-sm) {
  .sm-show {
    display: block !important;
  }
}

@media (min-width: $breakpoint-m) {
  .md-show {
    display: block !important;
  }
}

@media (min-width: $breakpoint-l) {
  .lg-show {
    display: block !important;
  }
}

@media (min-width: $breakpoint-sm) {
  .sm-hide {
    display: none !important;
  }
}

@media (min-width: $breakpoint-m) {
  .md-hide {
    display: none !important;
  }
}

@media (min-width: $breakpoint-l) {
  .lg-hide {
    display: none !important;
  }
}




/*--------- GRID (OLD) ---------*/

/*Using approach from here: http://j4n.co/blog/Creating-your-own-css-grid-system*/
/*
// Set width of grid
.grid-container {
  width: 100%;
  max-width: 1200px;
  //background: rgba( 0, 0, 0, 0.1 );
  margin: 0;
  padding: 0;
}

// Use row elements to keep columns from overflowing into other rows
.row:before, 
.row:after {
    content: "";
    display: table;
    clear: both;
}

.row {
	margin-bottom: 2rem;
}

.row:last-of-type {
  margin-bottom: 0;
}


// Use float to position columns. min-height keeps empty columns from stacking on top of each other
[class*='col-'] {
    float: left;
    width: 8.33%;
    padding: 0 2rem 0 0;
    min-height: 1px;
    box-sizing: border-box;
    //outline: 1px solid red;
}

[class*='col-']:last-of-type {
  //padding-right: 0;
}

// Using 12 column grid
.col-1{ width: 8.33%; }
.col-2{ width: 16.66%; }
.col-3{ width: 25.00%; }
.col-4{ width: 33.32%; }
.col-5{ width: 41.65%; }
.col-6{ width: 50.00%; }
.col-7{ width: 58.31%; }
.col-8{ width: 66.64%; }
.col-9{ width: 75.00%; }
.col-10{ width: 83.3%; }
.col-11{ width: 91.63%; }
.col-12{ width: 100%; }
*/



/*--------- MEDIA QUERIES ---------*/
/*
@media (min-width: 1600px) {
  html {
    font-size: 100%;
  }
  body { 
    padding: 0  rem;
  }
  .content-wrap { 
    width: 75%;
  }
}

@media (max-width: 900px) {
  body { 
    font-size: 100%;
  }
}

@media (max-width: 690px) {
  .content-wrap {
    width: auto;
    padding: 0 1em;
  }
  .header {
    margin: 1em 0;
  }
  .header h1 {
    font-size: 1.4em;
    margin-bottom: 0.6em;
  }
  .header .description {
    font-size: 1em;
  }
  .article {
    margin: 1em 0 2.5em;
  }
  .archive {
    width: 80%;
    margin: 0 auto;
  }
  .archive * {
    float: none !important;
    line-height: 1.6 !important;
    width: auto !important;
    height: auto !important;
    text-align: left !important;
    border: 0 !important;
    margin: 0 !important;
  }
  footer .nav {
    margin: 1em 0;
  }
  footer .about {
    padding: 0;
    font-size: 0.9em;
    padding-top: 1.6em;
    -webkit-column-count: 1;
    -moz-column-count: 1;
    -ms-column-count: 1;
    column-count: 1;
  }
  footer .about p {
    margin-bottom: 1em;
  }
}
*/